version: 2

jobs:
    checkout_code:
        docker:
            - image: ba78/golang-oracle:0.0.2
        steps:
            - checkout:
                path:  /go/src/github.com/dbgeek/terraform-provider-oraclerdbms
            - run:
                name: list dir
                command: |
                    ls /go/src/github.com/dbgeek/terraform-provider-oraclerdbms
            - run:
                name: pwd dir
                command: |
                    pwd
            - save_cache:
                key: v1-repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
                paths:
                    - /go/src/github.com/dbgeek
    build_terraform_provider_oraclerdbms:
        docker:
            - image: ba78/golang-oracle:0.0.2
        working_directory: /go/src/github.com/dbgeek/terraform-provider-oraclerdbms
        steps:
            - restore_cache:
                key: v1-repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
            - run:
                name: go install
                command: |
                    go install
            - save_cache:
                key: v1-go-bin-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
                paths:
                    - /go/bin
    oracle_dependencies:
        docker:
            - image: circleci/python:3.6-stretch-node-browsers-legacy
        working_directory: ~/
        steps:
            - restore_cache:
                key: v1-repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
            - restore_cache:
                keys:
                    - oracle-instantclient-v1-cache
            - run:
                name: create oracle artifact folder
                command: |
                    mkdir -p /home/circleci/artifacts/oracle
            - run:
                name: Update PATH and Define Environment Variable at Runtime
                command: |
                    echo 'export PATH=$(pwd)/venv/bin:$PATH' >> $BASH_ENV
                    source $BASH_ENV
            - run:
                name: sync oracle instant client
                command: aws s3 sync s3://whitepoplar/oracle /home/circleci/artifacts/oracle --no-progress
            - save_cache:
                key: oracle-instantclient-v1-cache
                paths:
                    - /home/circleci/artifacts/oracle
    build-oracle-image:
        docker:
            - image: ba78/golang-oracle:0.0.2
        working_directory: /go/src/github.com/dbgeek/terraform-provider-oraclerdbms/docker
        environment:
            TERRAFORM_VERSION: 0.11.8
            GO_VERSION: 1.11.1
            ORACLE_INSTANT_CLIENT: 12.2.0.1.0
            TERRAFORM_PROVIDER_ORACLERDBMS: 0.2.9
        steps:
            - restore_cache:
                key: v1-repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
            - restore_cache:
                key: v1-go-bin-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
            - setup_remote_docker:
                docker_layer_caching: true
            - run: 
                name: Loging to docker hub
                command: |
                    docker login -u $DOCKER_USER -p $DOCKER_PASS
            - run:
                name: cp provider binary
                command: |
                    cp /go/bin/terraform-provider-oraclerdbms ./terraform-provider-oraclerdbms
            - run:
                name: building oracle image
                command: |
                    docker build -t ba78/terraform-provider-oraclerdbms:"${TERRAFORM_PROVIDER_ORACLERDBMS}" --build-arg TF_VERSION="${TERRAFORM_VERSION}" --build-arg GO_VERSION="${GO_VERSION}" --build-arg TERRAFORM_PROVIDER_ORACLERDBMS="${TERRAFORM_PROVIDER_ORACLERDBMS}" .
            - run:
                name: push image to docker hub
                command: |
                    docker push ba78/terraform-provider-oraclerdbms:"${TERRAFORM_PROVIDER_ORACLERDBMS}"
    push-provider-binary:
        docker:
            - image: ba78/golang-oracle:0.0.2
        working_directory: /go/bin
        environment:
            TERRAFORM_VERSION: 0.11.8
            GO_VERSION: 1.11.1
            ORACLE_INSTANT_CLIENT: 12.2.0.1.0
            TERRAFORM_PROVIDER_ORACLERDBMS: 0.2.9
        stepts:
            - restore_cache:
                key: v1-repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
            - restore_cache:
                key: v1-go-bin-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
            - run: 
                name: login to gcloud
                command: |
                    echo $GCLOUD_SERVICE_KEY | base64 --decode | sudo gcloud auth activate-service-account --key-file=-
                    sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
                    sudo gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
workflows:
  version: 2
  build-and-deploy:
    jobs:
        - checkout_code
        - build_terraform_provider_oraclerdbms:
            requires:
                - checkout_code
        - build-oracle-image:
            filters:
                branches:
                    only: master
            requires:
                - build_terraform_provider_oraclerdbms
                - checkout_code
        - push-provider-binary:
            requires:
                - build_terraform_provider_oraclerdbms
                - checkout_code