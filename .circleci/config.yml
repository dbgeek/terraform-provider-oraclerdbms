version: 2

jobs:
    checkout_code:
        docker:
            - image: circleci/python:3.6-stretch-node-browsers-legacy
        steps:
            - checkout
            - save_cache:
                key: v1-repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
                paths:
                    - ~/project
    awscli_dependencies:
        docker:
            - image: circleci/python:3.6-stretch-node-browsers-legacy
        working_directory: ~/
        steps:
            - restore_cache:
                key: v1-repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
            - restore_cache:
                key: awscli-{{ checksum "project/.circleci/requirements.txt" }}
            - run:
                name: setup dependencies
                command: |
                    python3 -m venv venv
                    . venv/bin/activate
                    pip install -r project/.circleci/requirements.txt
            - save_cache: # special step to save dependency cache
                key: awscli-{{ checksum "project/.circleci/requirements.txt" }}
                paths:
                    - "venv"
    oracle_dependencies:
        docker:
            - image: circleci/python:3.6-stretch-node-browsers-legacy
        working_directory: ~/
        steps:
            - restore_cache:
                key: v1-repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
            - restore_cache:
                key: awscli-{{ checksum "project/.circleci/requirements.txt" }}
            - restore_cache:
                keys:
                    - oracle-instantclient-v1-cache
            - run:
                name: create oracle artifact folder
                command: |
                    mkdir -p /home/circleci/artifacts/oracle
            - run:
                name: Update PATH and Define Environment Variable at Runtime
                command: |
                    echo 'export PATH=$(pwd)/venv/bin:$PATH' >> $BASH_ENV
                    source $BASH_ENV
            - run:
                name: sync oracle instant client
                command: aws s3 sync s3://whitepoplar/oracle /home/circleci/artifacts/oracle --no-progress
            - save_cache:
                key: oracle-instantclient-v1-cache
                paths:
                    - /home/circleci/artifacts/oracle
    build-oracle-image:
        docker:
            - image: circleci/python:3.6-stretch-node-browsers-legacy
        working_directory: ~/project/docker
        environment:
            TERRAFORM_VERSION: 0.11.8
            GO_VERSION: 1.11.1
            ORACLE_INSTANT_CLIENT: 12.2.0.1.0
            TERRAFORM_PROVIDER_ORACLERDBMS: 0.2.8
        steps:
            - restore_cache:
                key: v1-repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
            - restore_cache:
                key: oracle-unzip-instantclient-v1-cache
            - restore_cache:
                keys:
                    - oracle-instantclient-v1-cache
            - setup_remote_docker:
                docker_layer_caching: true
            - run: 
                name: Loging to docker hub
                command: |
                    docker login -u $DOCKER_USER -p $DOCKER_PASS
            - run:
                name: ls /home/circleci/artifacts/oracle
                command: echo "$(ls -1 /home/circleci/artifacts/oracle)"
            - run:
                name: tar zip 
                command: |
                    cd ../
                    tar zcf ../terraform-provider-oraclerdbms.tar.gz . --exclude='./docker/lib/oracle/instantclient_12_2'
                    mv ../terraform-provider-oraclerdbms.tar.gz docker/
            - run:
                name: unzip instantclient
                command: |
                    unzip -qq -n /home/circleci/artifacts/oracle/instantclient-basic-linux.x64-"${ORACLE_INSTANT_CLIENT}".zip -d lib/oracle
                    unzip -qq -n /home/circleci/artifacts/oracle/instantclient-sdk-linux.x64-"${ORACLE_INSTANT_CLIENT}".zip -d lib/oracle
                    cd lib/oracle/instantclient_12_2
                    ln libclntsh.so.12.1 libclntsh.so
                    ln libclntshcore.so.12.1 libclntshcore.so
            - save_cache:
                key: oracle-unzip-instantclient-v1-cache
                paths:
                    - lib/oracle/instantclient_12_2
            - run:
                name: building oracle image
                command: |
                    docker build -t ba78/terraform-provider-oraclerdbms:"${TERRAFORM_PROVIDER_ORACLERDBMS}" --build-arg TF_VERSION="${TERRAFORM_VERSION}" --build-arg GO_VERSION="${GO_VERSION}" --build-arg TERRAFORM_PROVIDER_ORACLERDBMS="${TERRAFORM_PROVIDER_ORACLERDBMS}" .
            - run:
                name: push image to docker hub
                command: |
                    docker push ba78/terraform-provider-oraclerdbms:"${TERRAFORM_PROVIDER_ORACLERDBMS}"
workflows:
  version: 2
  build-and-deploy:
    jobs:
        - checkout_code
        - awscli_dependencies:
            requires:
                - checkout_code
        - oracle_dependencies:
            requires:
                - checkout_code
                - awscli_dependencies
        - build-oracle-image:
            requires:
                - oracle_dependencies